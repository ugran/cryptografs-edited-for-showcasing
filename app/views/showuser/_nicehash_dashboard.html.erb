<script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.7.1/Chart.bundle.min.js" integrity="sha256-N4u5BjTLNwmGul6RgLoESPNqDFVUibVuOYhP4gJgrew=" crossorigin="anonymous"></script>
<% payments = @nicehash_current[:result][:payments] %>
<% payments_array = [] %>
<% payments_dates = [] %>
<% payments.reverse.each do |t| %>
    <% payments_array.push(t[:amount].to_f) %>
    <% payments_dates.push(DateTime.parse(t[:time]).strftime('%d %b')) %>
<% end %>
<% my_sha256_speed = 0 %>
<% @miners.where(algorithm: "SHA256").each do |t| %>
    <% my_sha256_speed += t.avg_hashrate.to_f %>
<% end %>
<% my_scrypt_speed = 0 %>
<% @miners.where(algorithm: 'Scrypt').each do |t| %>
    <% my_scrypt_speed += t.avg_hashrate.to_f %>
<% end %>
<% stats = @nicehash_current[:result][:stats] %>
<% if @user.miners.where(algorithm: 'Scrypt').length > 0 %>
    <% if stats.present? %>
        <% unpaid_balance_scrypt = stats.select{ |b| b[:algo] == 0}.first[:balance] %>
        <% profitability_scrypt_per_TH = stats.select{|p| p[:algo] == 0 }.first[:price].to_f %>
        <% my_scrypt = ((profitability_scrypt_per_TH*my_scrypt_speed/1000000)*(100-@user.percent_fee.to_f)/100).round(5) %>
    <% end %>
<% end %>
<% if @user.miners.where(algorithm: 'SHA256').length > 0 %>
    <% if stats.present? %>
        <% unpaid_balance_sha256 = stats.select{ |b| b[:algo] == 1}.first[:balance] %>
        <% profitability_sha256_per_PH = stats.select{|p| p[:algo] == 1 }.first[:price].to_f %>
        <% my_sha256 = ((profitability_sha256_per_PH*my_sha256_speed/1000)*(100-@user.percent_fee.to_f)/100).round(5) %>
    <% end %>
<% end %>
<div class='container-fluid'>
    <div stylle='width:100%' style='text-align:center;'>
        <h1 style='display:inline-block'><span class="badge badge-warning"><b>BTC Price: <%=@btc_price%></b></span></h1>
        <h1 style='display:inline-block'><span class="badge badge-warning"><b>Balance: <%=(@balance[:result][:balance_confirmed].to_f*(100-@user.percent_fee.to_f)/100).round(6)%> BTC ~ $<%=(@btc_price.to_f*@balance[:result][:balance_confirmed].to_f*(100-@user.percent_fee.to_f)/100).round(2) %></b></span></h1>
        <h1 style='display:inline-block'><span class="badge badge-warning"><b><i class='material-icons'>flash_on</i> Cost: $<%= @user.fixed_fee %>/Month</b></span></h1>
    </div>  
    <% if stats.present? %>
        <div class='row'>
            <div class='col-sm-12 col-md-4'>
                <div class="alert alert-dark" role="alert" style='text-align:center'>
                    <b>SCRYPT Profitability:<br> <%= my_scrypt %> BTC/Day ~ <%= (my_scrypt*@btc_price.to_f).round(5) %> $/day</b>
                </div>     
            </div>
            <div class='col-sm-12 col-md-4'>
                <div class="alert alert-warning" role="alert" style='text-align:center'>
                    <b>SHA256 Profitability:<br> <%= my_sha256 %> BTC/Day ~ <%= (my_sha256*@btc_price.to_f).round(5) %> $/day</b>
                </div>     
            </div>
            <div class='col-sm-12 col-md-4'>
                <div class="alert alert-success" role="alert" style='text-align:center'>
                    <b>TOTAL Profitability:<br> <%= (my_sha256+my_scrypt).round(5) %> $/day ~ <%= ((my_sha256+my_scrypt)*@btc_price.to_f).round(5) %> $/day</b>
                </div>   
            </div>
        </div>
    <% end %>
    <div class='row' style='margin-top:20px;'>
        <div class='col-sm-12 col-md-4'>
            <p style='color:#006fe6; font-size:1.1em; font-weight:bold; widht:100%; text-align:center;'>Unpaid Balance</p>
            <canvas id="balances" style='height:300px; width:100%;'></canvas>
        </div>
        <div class='col-sm-12 col-md-8'>
            <canvas id="last7payments" style='height:350px; width:100%;'></canvas>
        </div>
    </div>
    <div style='margin-top:20px;'>
        <div class='row'>
            <% @miners.select(:algorithm).distinct.each do |a| %>
                <div class='col-sm-12 col-md-6'>
                    <span class="badge badge-secondary"><%= a.algorithm %></span>
                    <table class='table'>
                        <thead>
                            <th>#</th>
                            <th>Hashrate</th>
                            <th>Avg. Hashrate</th>
                            <th>Temp.</th>
                        </thead>
                        <tbody>
                            <% @miners.where(algorithm: a.algorithm).each_with_index do |t,i| %>
                                <tr>
                                    <td><%= i+1 %></td>
                                    <td><%= t.hashrate %></td>
                                    <td><%= t.avg_hashrate %></td>
                                    <td><%= t.temperature%>&deg;</td>
                                </tr>
                            <% end %>
                        </tbody>
                    </table>
                </div>
            <% end %>
        </div>
    </div>
</div>
<script>
    var balances = document.getElementById("balances");
    var myDoughnutChart = new Chart(balances, {
        type: 'doughnut',
        data: {
            labels: ['SHA256', 'Scrypt'],
            datasets: [{
                label: 'Unpaid Balance',
                data: [<%= unpaid_balance_sha256.to_f %>, <%= unpaid_balance_scrypt.to_f %>],
                backgroundColor: [
                    'rgb(255, 205, 86)',
                    'rgb(54, 162, 235)'
                ]
            }]
        }
    });
    var last7days = document.getElementById("last7payments");
    var myChart = new Chart(last7days, {
        type: 'bar',
        data: {
            labels: <%= raw payments_dates %>,
            datasets: [{
                label: 'Paymens for last 7 days.',
                data: <%= payments_array %>,
                backgroundColor: [
                    'rgba(54, 162, 235, 1)',
                    'rgba(54, 162, 235, 1)',
                    'rgba(54, 162, 235, 1)',
                    'rgba(54, 162, 235, 1)',
                    'rgba(54, 162, 235, 1)',
                    'rgba(54, 162, 235, 1)',
                    'rgba(54, 162, 235, 1)'
                ],
                borderColor: [
                    'rgba(54, 162, 235, 1)',
                    'rgba(54, 162, 235, 1)',
                    'rgba(54, 162, 235, 1)',
                    'rgba(54, 162, 235, 1)',
                    'rgba(54, 162, 235, 1)',
                    'rgba(54, 162, 235, 1)',
                    'rgba(54, 162, 235, 1)'
                ],
                borderWidth: 1
            }]
        },
        options: {
            scales: {
                yAxes: [{
                    ticks: {
                        beginAtZero:true
                    }
                }]
            }
        }
    });    
</script>